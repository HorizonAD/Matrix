// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: can.proto

#ifndef PROTOBUF_can_2eproto__INCLUDED
#define PROTOBUF_can_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace CANProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_can_2eproto();
void protobuf_AssignDesc_can_2eproto();
void protobuf_ShutdownFile_can_2eproto();

class VehSpeed;
class WheelAngle;
class Gear;
class TurnSignal;
class CANIMU;
class CANFrame;
class CANFrameRaw;

// ===================================================================

class VehSpeed : public ::google::protobuf::Message {
 public:
  VehSpeed();
  virtual ~VehSpeed();

  VehSpeed(const VehSpeed& from);

  inline VehSpeed& operator=(const VehSpeed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VehSpeed& default_instance();

  void Swap(VehSpeed* other);

  // implements Message ----------------------------------------------

  VehSpeed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VehSpeed& from);
  void MergeFrom(const VehSpeed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float speed = 1;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 1;
  inline float speed() const;
  inline void set_speed(float value);

  // required int64 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::int64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CANProto.VehSpeed)
 private:
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 time_stamp_;
  float speed_;
  friend void  protobuf_AddDesc_can_2eproto();
  friend void protobuf_AssignDesc_can_2eproto();
  friend void protobuf_ShutdownFile_can_2eproto();

  void InitAsDefaultInstance();
  static VehSpeed* default_instance_;
};
// -------------------------------------------------------------------

class WheelAngle : public ::google::protobuf::Message {
 public:
  WheelAngle();
  virtual ~WheelAngle();

  WheelAngle(const WheelAngle& from);

  inline WheelAngle& operator=(const WheelAngle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WheelAngle& default_instance();

  void Swap(WheelAngle* other);

  // implements Message ----------------------------------------------

  WheelAngle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WheelAngle& from);
  void MergeFrom(const WheelAngle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float angle = 1;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 1;
  inline float angle() const;
  inline void set_angle(float value);

  // required int64 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::int64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CANProto.WheelAngle)
 private:
  inline void set_has_angle();
  inline void clear_has_angle();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 time_stamp_;
  float angle_;
  friend void  protobuf_AddDesc_can_2eproto();
  friend void protobuf_AssignDesc_can_2eproto();
  friend void protobuf_ShutdownFile_can_2eproto();

  void InitAsDefaultInstance();
  static WheelAngle* default_instance_;
};
// -------------------------------------------------------------------

class Gear : public ::google::protobuf::Message {
 public:
  Gear();
  virtual ~Gear();

  Gear(const Gear& from);

  inline Gear& operator=(const Gear& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gear& default_instance();

  void Swap(Gear* other);

  // implements Message ----------------------------------------------

  Gear* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gear& from);
  void MergeFrom(const Gear& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int64 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::int64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CANProto.Gear)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 time_stamp_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_can_2eproto();
  friend void protobuf_AssignDesc_can_2eproto();
  friend void protobuf_ShutdownFile_can_2eproto();

  void InitAsDefaultInstance();
  static Gear* default_instance_;
};
// -------------------------------------------------------------------

class TurnSignal : public ::google::protobuf::Message {
 public:
  TurnSignal();
  virtual ~TurnSignal();

  TurnSignal(const TurnSignal& from);

  inline TurnSignal& operator=(const TurnSignal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnSignal& default_instance();

  void Swap(TurnSignal* other);

  // implements Message ----------------------------------------------

  TurnSignal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnSignal& from);
  void MergeFrom(const TurnSignal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int64 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::int64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CANProto.TurnSignal)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 time_stamp_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_can_2eproto();
  friend void protobuf_AssignDesc_can_2eproto();
  friend void protobuf_ShutdownFile_can_2eproto();

  void InitAsDefaultInstance();
  static TurnSignal* default_instance_;
};
// -------------------------------------------------------------------

class CANIMU : public ::google::protobuf::Message {
 public:
  CANIMU();
  virtual ~CANIMU();

  CANIMU(const CANIMU& from);

  inline CANIMU& operator=(const CANIMU& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CANIMU& default_instance();

  void Swap(CANIMU* other);

  // implements Message ----------------------------------------------

  CANIMU* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CANIMU& from);
  void MergeFrom(const CANIMU& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float acc = 1;
  inline bool has_acc() const;
  inline void clear_acc();
  static const int kAccFieldNumber = 1;
  inline float acc() const;
  inline void set_acc(float value);

  // optional float yaw = 4;
  inline bool has_yaw() const;
  inline void clear_yaw();
  static const int kYawFieldNumber = 4;
  inline float yaw() const;
  inline void set_yaw(float value);

  // optional float yaw_rate = 7;
  inline bool has_yaw_rate() const;
  inline void clear_yaw_rate();
  static const int kYawRateFieldNumber = 7;
  inline float yaw_rate() const;
  inline void set_yaw_rate(float value);

  // optional int64 time_stamp = 50;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 50;
  inline ::google::protobuf::int64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CANProto.CANIMU)
 private:
  inline void set_has_acc();
  inline void clear_has_acc();
  inline void set_has_yaw();
  inline void clear_has_yaw();
  inline void set_has_yaw_rate();
  inline void clear_has_yaw_rate();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float acc_;
  float yaw_;
  ::google::protobuf::int64 time_stamp_;
  float yaw_rate_;
  friend void  protobuf_AddDesc_can_2eproto();
  friend void protobuf_AssignDesc_can_2eproto();
  friend void protobuf_ShutdownFile_can_2eproto();

  void InitAsDefaultInstance();
  static CANIMU* default_instance_;
};
// -------------------------------------------------------------------

class CANFrame : public ::google::protobuf::Message {
 public:
  CANFrame();
  virtual ~CANFrame();

  CANFrame(const CANFrame& from);

  inline CANFrame& operator=(const CANFrame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CANFrame& default_instance();

  void Swap(CANFrame* other);

  // implements Message ----------------------------------------------

  CANFrame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CANFrame& from);
  void MergeFrom(const CANFrame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CANProto.TurnSignal ts = 1;
  inline int ts_size() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 1;
  inline const ::CANProto::TurnSignal& ts(int index) const;
  inline ::CANProto::TurnSignal* mutable_ts(int index);
  inline ::CANProto::TurnSignal* add_ts();
  inline const ::google::protobuf::RepeatedPtrField< ::CANProto::TurnSignal >&
      ts() const;
  inline ::google::protobuf::RepeatedPtrField< ::CANProto::TurnSignal >*
      mutable_ts();

  // repeated .CANProto.Gear gt = 2;
  inline int gt_size() const;
  inline void clear_gt();
  static const int kGtFieldNumber = 2;
  inline const ::CANProto::Gear& gt(int index) const;
  inline ::CANProto::Gear* mutable_gt(int index);
  inline ::CANProto::Gear* add_gt();
  inline const ::google::protobuf::RepeatedPtrField< ::CANProto::Gear >&
      gt() const;
  inline ::google::protobuf::RepeatedPtrField< ::CANProto::Gear >*
      mutable_gt();

  // repeated .CANProto.VehSpeed sp = 3;
  inline int sp_size() const;
  inline void clear_sp();
  static const int kSpFieldNumber = 3;
  inline const ::CANProto::VehSpeed& sp(int index) const;
  inline ::CANProto::VehSpeed* mutable_sp(int index);
  inline ::CANProto::VehSpeed* add_sp();
  inline const ::google::protobuf::RepeatedPtrField< ::CANProto::VehSpeed >&
      sp() const;
  inline ::google::protobuf::RepeatedPtrField< ::CANProto::VehSpeed >*
      mutable_sp();

  // repeated .CANProto.WheelAngle wa = 4;
  inline int wa_size() const;
  inline void clear_wa();
  static const int kWaFieldNumber = 4;
  inline const ::CANProto::WheelAngle& wa(int index) const;
  inline ::CANProto::WheelAngle* mutable_wa(int index);
  inline ::CANProto::WheelAngle* add_wa();
  inline const ::google::protobuf::RepeatedPtrField< ::CANProto::WheelAngle >&
      wa() const;
  inline ::google::protobuf::RepeatedPtrField< ::CANProto::WheelAngle >*
      mutable_wa();

  // repeated .CANProto.CANIMU imu = 5;
  inline int imu_size() const;
  inline void clear_imu();
  static const int kImuFieldNumber = 5;
  inline const ::CANProto::CANIMU& imu(int index) const;
  inline ::CANProto::CANIMU* mutable_imu(int index);
  inline ::CANProto::CANIMU* add_imu();
  inline const ::google::protobuf::RepeatedPtrField< ::CANProto::CANIMU >&
      imu() const;
  inline ::google::protobuf::RepeatedPtrField< ::CANProto::CANIMU >*
      mutable_imu();

  // @@protoc_insertion_point(class_scope:CANProto.CANFrame)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CANProto::TurnSignal > ts_;
  ::google::protobuf::RepeatedPtrField< ::CANProto::Gear > gt_;
  ::google::protobuf::RepeatedPtrField< ::CANProto::VehSpeed > sp_;
  ::google::protobuf::RepeatedPtrField< ::CANProto::WheelAngle > wa_;
  ::google::protobuf::RepeatedPtrField< ::CANProto::CANIMU > imu_;
  friend void  protobuf_AddDesc_can_2eproto();
  friend void protobuf_AssignDesc_can_2eproto();
  friend void protobuf_ShutdownFile_can_2eproto();

  void InitAsDefaultInstance();
  static CANFrame* default_instance_;
};
// -------------------------------------------------------------------

class CANFrameRaw : public ::google::protobuf::Message {
 public:
  CANFrameRaw();
  virtual ~CANFrameRaw();

  CANFrameRaw(const CANFrameRaw& from);

  inline CANFrameRaw& operator=(const CANFrameRaw& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CANFrameRaw& default_instance();

  void Swap(CANFrameRaw* other);

  // implements Message ----------------------------------------------

  CANFrameRaw* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CANFrameRaw& from);
  void MergeFrom(const CANFrameRaw& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 can_id = 1;
  inline bool has_can_id() const;
  inline void clear_can_id();
  static const int kCanIdFieldNumber = 1;
  inline ::google::protobuf::int32 can_id() const;
  inline void set_can_id(::google::protobuf::int32 value);

  // required int32 can_dlc = 2;
  inline bool has_can_dlc() const;
  inline void clear_can_dlc();
  static const int kCanDlcFieldNumber = 2;
  inline ::google::protobuf::int32 can_dlc() const;
  inline void set_can_dlc(::google::protobuf::int32 value);

  // repeated int32 data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline ::google::protobuf::int32 data(int index) const;
  inline void set_data(int index, ::google::protobuf::int32 value);
  inline void add_data(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // required int64 time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::int64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CANProto.CANFrameRaw)
 private:
  inline void set_has_can_id();
  inline void clear_has_can_id();
  inline void set_has_can_dlc();
  inline void clear_has_can_dlc();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 can_id_;
  ::google::protobuf::int32 can_dlc_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  ::google::protobuf::int64 time_stamp_;
  friend void  protobuf_AddDesc_can_2eproto();
  friend void protobuf_AssignDesc_can_2eproto();
  friend void protobuf_ShutdownFile_can_2eproto();

  void InitAsDefaultInstance();
  static CANFrameRaw* default_instance_;
};
// ===================================================================


// ===================================================================

// VehSpeed

// required float speed = 1;
inline bool VehSpeed::has_speed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VehSpeed::set_has_speed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VehSpeed::clear_has_speed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VehSpeed::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline float VehSpeed::speed() const {
  // @@protoc_insertion_point(field_get:CANProto.VehSpeed.speed)
  return speed_;
}
inline void VehSpeed::set_speed(float value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:CANProto.VehSpeed.speed)
}

// required int64 time_stamp = 2;
inline bool VehSpeed::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VehSpeed::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VehSpeed::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VehSpeed::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
inline ::google::protobuf::int64 VehSpeed::time_stamp() const {
  // @@protoc_insertion_point(field_get:CANProto.VehSpeed.time_stamp)
  return time_stamp_;
}
inline void VehSpeed::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:CANProto.VehSpeed.time_stamp)
}

// -------------------------------------------------------------------

// WheelAngle

// required float angle = 1;
inline bool WheelAngle::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WheelAngle::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WheelAngle::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WheelAngle::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline float WheelAngle::angle() const {
  // @@protoc_insertion_point(field_get:CANProto.WheelAngle.angle)
  return angle_;
}
inline void WheelAngle::set_angle(float value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:CANProto.WheelAngle.angle)
}

// required int64 time_stamp = 2;
inline bool WheelAngle::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WheelAngle::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WheelAngle::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WheelAngle::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
inline ::google::protobuf::int64 WheelAngle::time_stamp() const {
  // @@protoc_insertion_point(field_get:CANProto.WheelAngle.time_stamp)
  return time_stamp_;
}
inline void WheelAngle::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:CANProto.WheelAngle.time_stamp)
}

// -------------------------------------------------------------------

// Gear

// required int32 type = 1;
inline bool Gear::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Gear::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Gear::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Gear::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Gear::type() const {
  // @@protoc_insertion_point(field_get:CANProto.Gear.type)
  return type_;
}
inline void Gear::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CANProto.Gear.type)
}

// required int64 time_stamp = 2;
inline bool Gear::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Gear::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Gear::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Gear::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
inline ::google::protobuf::int64 Gear::time_stamp() const {
  // @@protoc_insertion_point(field_get:CANProto.Gear.time_stamp)
  return time_stamp_;
}
inline void Gear::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:CANProto.Gear.time_stamp)
}

// -------------------------------------------------------------------

// TurnSignal

// required int32 type = 1;
inline bool TurnSignal::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnSignal::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnSignal::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnSignal::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 TurnSignal::type() const {
  // @@protoc_insertion_point(field_get:CANProto.TurnSignal.type)
  return type_;
}
inline void TurnSignal::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CANProto.TurnSignal.type)
}

// required int64 time_stamp = 2;
inline bool TurnSignal::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnSignal::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnSignal::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnSignal::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
inline ::google::protobuf::int64 TurnSignal::time_stamp() const {
  // @@protoc_insertion_point(field_get:CANProto.TurnSignal.time_stamp)
  return time_stamp_;
}
inline void TurnSignal::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:CANProto.TurnSignal.time_stamp)
}

// -------------------------------------------------------------------

// CANIMU

// optional float acc = 1;
inline bool CANIMU::has_acc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CANIMU::set_has_acc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CANIMU::clear_has_acc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CANIMU::clear_acc() {
  acc_ = 0;
  clear_has_acc();
}
inline float CANIMU::acc() const {
  // @@protoc_insertion_point(field_get:CANProto.CANIMU.acc)
  return acc_;
}
inline void CANIMU::set_acc(float value) {
  set_has_acc();
  acc_ = value;
  // @@protoc_insertion_point(field_set:CANProto.CANIMU.acc)
}

// optional float yaw = 4;
inline bool CANIMU::has_yaw() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CANIMU::set_has_yaw() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CANIMU::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CANIMU::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
inline float CANIMU::yaw() const {
  // @@protoc_insertion_point(field_get:CANProto.CANIMU.yaw)
  return yaw_;
}
inline void CANIMU::set_yaw(float value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:CANProto.CANIMU.yaw)
}

// optional float yaw_rate = 7;
inline bool CANIMU::has_yaw_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CANIMU::set_has_yaw_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CANIMU::clear_has_yaw_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CANIMU::clear_yaw_rate() {
  yaw_rate_ = 0;
  clear_has_yaw_rate();
}
inline float CANIMU::yaw_rate() const {
  // @@protoc_insertion_point(field_get:CANProto.CANIMU.yaw_rate)
  return yaw_rate_;
}
inline void CANIMU::set_yaw_rate(float value) {
  set_has_yaw_rate();
  yaw_rate_ = value;
  // @@protoc_insertion_point(field_set:CANProto.CANIMU.yaw_rate)
}

// optional int64 time_stamp = 50;
inline bool CANIMU::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CANIMU::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CANIMU::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CANIMU::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
inline ::google::protobuf::int64 CANIMU::time_stamp() const {
  // @@protoc_insertion_point(field_get:CANProto.CANIMU.time_stamp)
  return time_stamp_;
}
inline void CANIMU::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:CANProto.CANIMU.time_stamp)
}

// -------------------------------------------------------------------

// CANFrame

// repeated .CANProto.TurnSignal ts = 1;
inline int CANFrame::ts_size() const {
  return ts_.size();
}
inline void CANFrame::clear_ts() {
  ts_.Clear();
}
inline const ::CANProto::TurnSignal& CANFrame::ts(int index) const {
  // @@protoc_insertion_point(field_get:CANProto.CANFrame.ts)
  return ts_.Get(index);
}
inline ::CANProto::TurnSignal* CANFrame::mutable_ts(int index) {
  // @@protoc_insertion_point(field_mutable:CANProto.CANFrame.ts)
  return ts_.Mutable(index);
}
inline ::CANProto::TurnSignal* CANFrame::add_ts() {
  // @@protoc_insertion_point(field_add:CANProto.CANFrame.ts)
  return ts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CANProto::TurnSignal >&
CANFrame::ts() const {
  // @@protoc_insertion_point(field_list:CANProto.CANFrame.ts)
  return ts_;
}
inline ::google::protobuf::RepeatedPtrField< ::CANProto::TurnSignal >*
CANFrame::mutable_ts() {
  // @@protoc_insertion_point(field_mutable_list:CANProto.CANFrame.ts)
  return &ts_;
}

// repeated .CANProto.Gear gt = 2;
inline int CANFrame::gt_size() const {
  return gt_.size();
}
inline void CANFrame::clear_gt() {
  gt_.Clear();
}
inline const ::CANProto::Gear& CANFrame::gt(int index) const {
  // @@protoc_insertion_point(field_get:CANProto.CANFrame.gt)
  return gt_.Get(index);
}
inline ::CANProto::Gear* CANFrame::mutable_gt(int index) {
  // @@protoc_insertion_point(field_mutable:CANProto.CANFrame.gt)
  return gt_.Mutable(index);
}
inline ::CANProto::Gear* CANFrame::add_gt() {
  // @@protoc_insertion_point(field_add:CANProto.CANFrame.gt)
  return gt_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CANProto::Gear >&
CANFrame::gt() const {
  // @@protoc_insertion_point(field_list:CANProto.CANFrame.gt)
  return gt_;
}
inline ::google::protobuf::RepeatedPtrField< ::CANProto::Gear >*
CANFrame::mutable_gt() {
  // @@protoc_insertion_point(field_mutable_list:CANProto.CANFrame.gt)
  return &gt_;
}

// repeated .CANProto.VehSpeed sp = 3;
inline int CANFrame::sp_size() const {
  return sp_.size();
}
inline void CANFrame::clear_sp() {
  sp_.Clear();
}
inline const ::CANProto::VehSpeed& CANFrame::sp(int index) const {
  // @@protoc_insertion_point(field_get:CANProto.CANFrame.sp)
  return sp_.Get(index);
}
inline ::CANProto::VehSpeed* CANFrame::mutable_sp(int index) {
  // @@protoc_insertion_point(field_mutable:CANProto.CANFrame.sp)
  return sp_.Mutable(index);
}
inline ::CANProto::VehSpeed* CANFrame::add_sp() {
  // @@protoc_insertion_point(field_add:CANProto.CANFrame.sp)
  return sp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CANProto::VehSpeed >&
CANFrame::sp() const {
  // @@protoc_insertion_point(field_list:CANProto.CANFrame.sp)
  return sp_;
}
inline ::google::protobuf::RepeatedPtrField< ::CANProto::VehSpeed >*
CANFrame::mutable_sp() {
  // @@protoc_insertion_point(field_mutable_list:CANProto.CANFrame.sp)
  return &sp_;
}

// repeated .CANProto.WheelAngle wa = 4;
inline int CANFrame::wa_size() const {
  return wa_.size();
}
inline void CANFrame::clear_wa() {
  wa_.Clear();
}
inline const ::CANProto::WheelAngle& CANFrame::wa(int index) const {
  // @@protoc_insertion_point(field_get:CANProto.CANFrame.wa)
  return wa_.Get(index);
}
inline ::CANProto::WheelAngle* CANFrame::mutable_wa(int index) {
  // @@protoc_insertion_point(field_mutable:CANProto.CANFrame.wa)
  return wa_.Mutable(index);
}
inline ::CANProto::WheelAngle* CANFrame::add_wa() {
  // @@protoc_insertion_point(field_add:CANProto.CANFrame.wa)
  return wa_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CANProto::WheelAngle >&
CANFrame::wa() const {
  // @@protoc_insertion_point(field_list:CANProto.CANFrame.wa)
  return wa_;
}
inline ::google::protobuf::RepeatedPtrField< ::CANProto::WheelAngle >*
CANFrame::mutable_wa() {
  // @@protoc_insertion_point(field_mutable_list:CANProto.CANFrame.wa)
  return &wa_;
}

// repeated .CANProto.CANIMU imu = 5;
inline int CANFrame::imu_size() const {
  return imu_.size();
}
inline void CANFrame::clear_imu() {
  imu_.Clear();
}
inline const ::CANProto::CANIMU& CANFrame::imu(int index) const {
  // @@protoc_insertion_point(field_get:CANProto.CANFrame.imu)
  return imu_.Get(index);
}
inline ::CANProto::CANIMU* CANFrame::mutable_imu(int index) {
  // @@protoc_insertion_point(field_mutable:CANProto.CANFrame.imu)
  return imu_.Mutable(index);
}
inline ::CANProto::CANIMU* CANFrame::add_imu() {
  // @@protoc_insertion_point(field_add:CANProto.CANFrame.imu)
  return imu_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CANProto::CANIMU >&
CANFrame::imu() const {
  // @@protoc_insertion_point(field_list:CANProto.CANFrame.imu)
  return imu_;
}
inline ::google::protobuf::RepeatedPtrField< ::CANProto::CANIMU >*
CANFrame::mutable_imu() {
  // @@protoc_insertion_point(field_mutable_list:CANProto.CANFrame.imu)
  return &imu_;
}

// -------------------------------------------------------------------

// CANFrameRaw

// required int32 can_id = 1;
inline bool CANFrameRaw::has_can_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CANFrameRaw::set_has_can_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CANFrameRaw::clear_has_can_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CANFrameRaw::clear_can_id() {
  can_id_ = 0;
  clear_has_can_id();
}
inline ::google::protobuf::int32 CANFrameRaw::can_id() const {
  // @@protoc_insertion_point(field_get:CANProto.CANFrameRaw.can_id)
  return can_id_;
}
inline void CANFrameRaw::set_can_id(::google::protobuf::int32 value) {
  set_has_can_id();
  can_id_ = value;
  // @@protoc_insertion_point(field_set:CANProto.CANFrameRaw.can_id)
}

// required int32 can_dlc = 2;
inline bool CANFrameRaw::has_can_dlc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CANFrameRaw::set_has_can_dlc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CANFrameRaw::clear_has_can_dlc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CANFrameRaw::clear_can_dlc() {
  can_dlc_ = 0;
  clear_has_can_dlc();
}
inline ::google::protobuf::int32 CANFrameRaw::can_dlc() const {
  // @@protoc_insertion_point(field_get:CANProto.CANFrameRaw.can_dlc)
  return can_dlc_;
}
inline void CANFrameRaw::set_can_dlc(::google::protobuf::int32 value) {
  set_has_can_dlc();
  can_dlc_ = value;
  // @@protoc_insertion_point(field_set:CANProto.CANFrameRaw.can_dlc)
}

// repeated int32 data = 3;
inline int CANFrameRaw::data_size() const {
  return data_.size();
}
inline void CANFrameRaw::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 CANFrameRaw::data(int index) const {
  // @@protoc_insertion_point(field_get:CANProto.CANFrameRaw.data)
  return data_.Get(index);
}
inline void CANFrameRaw::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:CANProto.CANFrameRaw.data)
}
inline void CANFrameRaw::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:CANProto.CANFrameRaw.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CANFrameRaw::data() const {
  // @@protoc_insertion_point(field_list:CANProto.CANFrameRaw.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CANFrameRaw::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:CANProto.CANFrameRaw.data)
  return &data_;
}

// required int64 time_stamp = 4;
inline bool CANFrameRaw::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CANFrameRaw::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CANFrameRaw::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CANFrameRaw::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
inline ::google::protobuf::int64 CANFrameRaw::time_stamp() const {
  // @@protoc_insertion_point(field_get:CANProto.CANFrameRaw.time_stamp)
  return time_stamp_;
}
inline void CANFrameRaw::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:CANProto.CANFrameRaw.time_stamp)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CANProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_can_2eproto__INCLUDED
